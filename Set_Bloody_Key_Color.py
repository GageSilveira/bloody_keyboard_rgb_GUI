import usb
import os
from pathlib import Path

ID_VENDOR: int = 0x09DA
ID_PRODUCT: int = 0xFA10
	
if os.path.exists("active_profile"):
    with open("active_profile", 'r') as file:
        lines = []
        for line in file:
            line = line.strip()
            lines.append(line)
    file.close()
else:
    lines = ["ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"]

class UsbDevice:
    bm_request_type: int = 0x00000021
    b_request: int = 0x09
    w_value: int = 0x00000307
    w_index: int = 2

    id_vendor: int
    id_product: int

    def __init__(self, id_vendor: int, id_product: int):
        self.id_vendor = id_vendor
        self.id_product = id_product
        self.__device = None

        self.__init_device()

    def __init_device(self) -> None:
        self.__device = usb.core.find(
            idVendor=self.id_vendor, idProduct=self.id_product
        )
        if self.__device is None:
            raise ValueError("Keyboard not found!")

    def detach(self) -> None:
        for config in self.__device:
            for i in range(config.bNumInterfaces):
                if self.__device.is_kernel_driver_active(i):
                    self.__device.detach_kernel_driver(i)
        self.__device.set_configuration()

    def release(self) -> None:
        for config in self.__device:
            for i in range(config.bNumInterfaces):
                usb.util.release_interface(self.__device, i)
                self.__device.attach_kernel_driver(i)

    def set_value(self, hex_value: str) -> None:
        try:
            self.__device.ctrl_transfer(
                self.bm_request_type,
                self.b_request,
                self.w_value,
                self.w_index,
                bytes.fromhex(hex_value),
            )
        except ValueError:
            self.release()
            raise

field_one_RED =	"070306070000" + str(lines[0]) #initial data + red values for first 58 keys
field_two_RED =	"070306080000" + str(lines[1]) + 		"000000000000000000000000" #initial data + red values keys 59 to 104 + filler 0's
field_one_GREEN = "070306090000" + str(lines[2]) #initial data + green values for first 58 keys
field_two_GREEN = "0703060a0000" + str(lines[3]) +		"000000000000000000000000" #initial data + green values keys 59 to 104 + filler 0's
field_one_BLUE	= "0703060b0000" + str(lines[4]) #initial data + blue values for first 58 keys
field_two_BLUE	= "0703060c0000" + str(lines[5]) +		"000000000000000000000000" #initial data + blue values keys 59 to 104 + filler 0's

#first block inits + color blocks + final block in hex
data_hex = ["071f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "071f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "07050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "071f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "071f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "071f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "07290000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "071f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "071f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "071f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "07050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "07070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "071f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "071f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "072a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "071f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "071f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "072a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "071f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "071f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "07290000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "071e0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "07090000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "07050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "072f002e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "070c0000000000000680000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "070c0000000000000680000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "07030605000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "07060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "07030601000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "07030601000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "07030605000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "07030601000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "07030601000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		field_one_RED,
		field_two_RED,
		field_one_GREEN,
		field_two_GREEN,
		field_one_BLUE,
		field_two_BLUE,
		"07050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"]

MyKeyboard = UsbDevice(ID_VENDOR,ID_PRODUCT)
MyKeyboard.detach()
for packets in data_hex:
	MyKeyboard.set_value(packets)
MyKeyboard.release()
